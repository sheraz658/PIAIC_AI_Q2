# -*- coding: utf-8 -*-
"""NumpyAssignment1

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MuSm0-ELkB5KmUn1mMczMbwYsLd_J9kI
"""

import numpy as np

nullVector = np.zeros(10)

nullVector

secondVector = np.arange(10,50)

secondVector

np.shape(secondVector)

secondVector.dtype

np.version

np.show_config

secondVector.ndim

boolArray = np.array([1,1,1,1], dtype=bool)

boolArray

twoDArray = np.array([[1,2,3], [4,5,6]])

twoDArray

threeDArray = np.array([[1,2,3],[4,5,6],[7,8,9]])

threeDArray

arr = [1,2,3,4,5]
reversed_arr = arr[::-1]
reversed_arr

nullVector = np.zeros(10)
nullVector[4] = 1
nullVector

array3x3 = np.identity(3)
array3x3

arr = np.array([1, 2, 3, 4, 5])
arr = arr.astype(float)
arr

arr1 = np.array([[1., 2., 3.],

            [4., 5., 6.]])  

arr2 = np.array([[0., 4., 1.],

           [7., 2., 12.]])
multiArr = np.multiply(arr1,arr2)
multiArr

arr = np.arange(10)
arr[arr%2 == 1] = -1 
arr

arr = np.arange(10)
arr[5] = 12
arr[6] = 12
arr[7] = 12
arr[8] = 12

x = np.ones((5,5))
x[1:-1,1:-1] = 0
x

arr2d = np.array([[1, 2, 3],

            [4, 5, 6], 

            [7, 8, 9]])
arr2d = np.where(arr2d <= 5, 0, arr2d)
arr2d

arr2d = np.array([[1, 2, 3],

            [4, 5, 6], 

            [7, 8, 9]])
arr2d[1][1] = 12
arr2d

a = np.array([10, 20, 30, 40, 50])
a = a.astype("int64")
print(a.dtype)

arr = np.arange(0,9)
arr.reshape(3,3)
new_arr = np.delete(arr, 0)
new_arr

arr = np.arange(0,9)
arr.reshape(3,3)
new_arr = np.delete(arr, 1)
new_arr

x = np.random.random((10,10))
xmin, xmax = x.min(), x.max()
print(xmin, xmax)

a = np.array([1,2,3,2,3,4,3,4,5,6])
b = np.array([7,2,10,2,7,4,9,4,9,8])
np.intersect1d(a,b)

a = np.array([1,2,3,2,3,4,3,4,5,6])
b = np.array([7,2,10,2,7,4,9,4,9,8])
np.where(np.in1d(a, b))[0]

names = np.array(['Bob', 'Joe', 'Will', 'Bob', 'Will', 'Joe', 'Joe'])
data = np.random.randn(7, 4)
print(data)
data[(names != 'Will')

names = np.array(['Bob', 'Joe', 'Will', 'Bob', 'Will', 'Joe', 'Joe'])
data = np.random.randn(7, 4)
print(data)
data[(names != 'Will') & (names != 'Joe')]

np.random.uniform(5, 10, size=(5, 3))

np.random.uniform(1, 16, size=(2,2,4))

x = np.random.uniform(1, 16, size=(2,2,4))
np.swapaxes(x,0,1)

n = np.array([0.2,2,3,4,5])
for i in range(5):
  n[i] = np.sqrt(n[i])
  if n[i] < 0.5:
    n[i] = 0
n

array1 = np.random.randint(12, size = 12)
array2 = np.random.randint(12, size = 12)
newArr = []
for i in range(12):
  newArr.append(np.maximum(array1[i], array2[i]))
newArr

names = np.array(['Bob', 'Joe', 'Will', 'Bob', 'Will', 'Joe', 'Joe'])
np.unique(names)

a = np.array([1,2,3,4,5]) 
b = np.array([5,6,7,8,9])
a[b[np.searchsorted(b,a)] !=  a]

sampleArray = np.array([[34,43,73],[82,22,12],[53,94,66]])
sampleArray = np.delete(sampleArray , 1, axis = 1) 
newColumn = np.array([[10,10,10]])
np.insert(sampleArray , 1, newColumn, axis = 1)

x = np.array([[1., 2., 3.], [4., 5., 6.]])
y = np.array([[6., 23.], [-1, 7], [8, 9]])
np.dot(x, y)

arr = np.random.random((1, 20))
np.cumsum(arr)